[{"/Users/zacharymckenna/Developer/Personal/nye/nye/src/index.js":"1","/Users/zacharymckenna/Developer/Personal/nye/nye/src/App.js":"2","/Users/zacharymckenna/Developer/Personal/nye/nye/src/data.js":"3"},{"size":547,"mtime":1609094280527,"results":"4","hashOfConfig":"5"},{"size":7867,"mtime":1609095964966,"results":"6","hashOfConfig":"5"},{"size":6304,"mtime":1609092869892,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1t2utn1",{"filePath":"10","messages":"11","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/zacharymckenna/Developer/Personal/nye/nye/src/index.js",[],"/Users/zacharymckenna/Developer/Personal/nye/nye/src/App.js",["15","16","17","18","19"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport data from \"./data\";\nimport { useEffect, useState } from \"react\";\nimport {\n  Accordion,\n  Jumbotron,\n  Container,\n  Col,\n  Row,\n  Card,\n  Button,\n} from \"react-bootstrap\";\n\nconst App = () => {\n  const [characters, setCharacters] = useState();\n  const processData = (data) => {\n    const cleanedData = [];\n    data.map((answers) => {\n      const user = {};\n      for (const [key, value] of Object.entries(answers)) {\n        switch (key) {\n          case \"Before we start, what is your real life name?\":\n            user.username = value;\n            break;\n          case \"What is your character's name?\":\n            user.characterName = value;\n            break;\n          case \"What is your race?\":\n            user.race = value;\n            break;\n          case \"What is your role?\":\n            user.role = value.toLowerCase();\n          case \"What is your descriptor?\":\n            user.descriptor = value.toLowerCase();\n            break;\n          case \"What is your strength?\":\n            user.strength = value.toLowerCase();\n            break;\n          case \"What is your flaw?\":\n            user.flaw = value.toLowerCase();\n            break;\n          case \"What is your drive?\":\n            user.drive = value.toLowerCase();\n            break;\n          case \"Throughout your life, you have gained a title, nickname or honorific. What is it, and how did you gain it?\":\n            user.nickname = value;\n            break;\n          case \"While everyone is excited to be invited to the great Yule Festival, there is another motivation that drives you to attend. What is it?\":\n            user.motivation = value;\n            break;\n          case \"Of all the places youâ€™ve seen on your travels, one stands out and you long to return. Where is it and why?\":\n            user.memory = value;\n          case \"How are you known within the Realms? Are you famous, infamous, a normal citizen or a mystery?\":\n            user.infamy = value;\n            break;\n          case \"What is your home Realm like? What is something you love about it? What about it do you wish would change?\":\n            user.home = value;\n        }\n      }\n      cleanedData.push(user);\n    });\n    return cleanedData;\n  };\n\n  const style = {\n    pink: {\n      color: \"magenta\",\n    },\n    green: {\n      color: \"#5cb85c\",\n    },\n    red: {\n      color: \"#d9534f\",\n    },\n    blue: {\n      color: \"#5bc0de\",\n    },\n    orange: {\n      color: \"#f0ad4e\",\n    },\n  };\n\n  useEffect(() => {\n    setCharacters(processData(data));\n  }, []);\n\n  return (\n    <>\n      <Jumbotron fluid>\n        <Container>\n          <h1>The Great Yule Ball</h1>\n          <p>The attendees of the great Yule Ball of 1202</p>\n        </Container>\n      </Jumbotron>\n      <Container>\n        {characters &&\n          characters.map((character) => {\n            return (\n              <Row className=\"mb-3\">\n                <Col>\n                  <Card>\n                    <Card.Body>\n                      <Card.Title style={{ fontFamily: \"Langar\" }}>\n                        {character.characterName\n                          ? character.characterName\n                          : \"name unknown\"}\n                      </Card.Title>\n                      <Card.Subtitle className=\"mb-2 text-muted\">\n                        {character.race ? character.race : \"\"}\n                      </Card.Subtitle>\n\n                      <Card.Text>\n                        <p>\n                          A {character.descriptor} {character.role} who has{\" \"}\n                          <span style={style.green}>{character.strength}</span>,\n                          but also{\" \"}\n                          <span style={style.red}>{character.flaw}</span>. Thier\n                          drive is to {character.drive}.\n                        </p>\n                      </Card.Text>\n                      <Accordion>\n                        {character.nickname && (\n                          <Card>\n                            <Card.Header>\n                              <Accordion.Toggle\n                                as={Button}\n                                variant=\"link\"\n                                eventKey=\"0\"\n                              >\n                                How did you gain your title?\n                              </Accordion.Toggle>\n                            </Card.Header>\n                            <Accordion.Collapse eventKey=\"0\">\n                              <Card.Body>{character.nickname}</Card.Body>\n                            </Accordion.Collapse>\n                          </Card>\n                        )}\n                        {character.motivation && (\n                          <Card>\n                            <Card.Header>\n                              <Accordion.Toggle\n                                as={Button}\n                                variant=\"link\"\n                                eventKey=\"1\"\n                              >\n                                What is your motivation for attending?\n                              </Accordion.Toggle>\n                            </Card.Header>\n                            <Accordion.Collapse eventKey=\"1\">\n                              <Card.Body>{character.motivation}</Card.Body>\n                            </Accordion.Collapse>\n                          </Card>\n                        )}\n                        {character.memory && (\n                          <Card>\n                            <Card.Header>\n                              <Accordion.Toggle\n                                as={Button}\n                                variant=\"link\"\n                                eventKey=\"2\"\n                              >\n                                What is a memorable location from your travels?\n                              </Accordion.Toggle>\n                            </Card.Header>\n                            <Accordion.Collapse eventKey=\"2\">\n                              <Card.Body>{character.memory}</Card.Body>\n                            </Accordion.Collapse>\n                          </Card>\n                        )}\n                        {character.infamy && (\n                          <Card>\n                            <Card.Header>\n                              <Accordion.Toggle\n                                as={Button}\n                                variant=\"link\"\n                                eventKey=\"3\"\n                              >\n                                What is your status in the Realm?\n                              </Accordion.Toggle>\n                            </Card.Header>\n                            <Accordion.Collapse eventKey=\"3\">\n                              <Card.Body>{character.infamy}</Card.Body>\n                            </Accordion.Collapse>\n                          </Card>\n                        )}\n                        {character.home && (\n                          <Card>\n                            <Card.Header>\n                              <Accordion.Toggle\n                                as={Button}\n                                variant=\"link\"\n                                eventKey=\"4\"\n                              >\n                                What is your home like?\n                              </Accordion.Toggle>\n                            </Card.Header>\n                            <Accordion.Collapse eventKey=\"4\">\n                              <Card.Body>{character.home}</Card.Body>\n                            </Accordion.Collapse>\n                          </Card>\n                        )}\n                      </Accordion>\n                    </Card.Body>\n                  </Card>\n                </Col>\n              </Row>\n            );\n          })}\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","/Users/zacharymckenna/Developer/Personal/nye/nye/src/data.js",[],{"ruleId":"20","severity":1,"message":"21","line":1,"column":8,"nodeType":"22","messageId":"23","endLine":1,"endColumn":12},{"ruleId":"24","severity":1,"message":"25","line":19,"column":24,"nodeType":"26","messageId":"27","endLine":19,"endColumn":26},{"ruleId":"28","severity":1,"message":"29","line":22,"column":9,"nodeType":"30","messageId":"31","endLine":59,"endColumn":10},{"ruleId":"32","severity":1,"message":"33","line":34,"column":11,"nodeType":"34","messageId":"35","endLine":36,"endColumn":19},{"ruleId":"32","severity":1,"message":"33","line":54,"column":11,"nodeType":"34","messageId":"35","endLine":56,"endColumn":19},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case"]