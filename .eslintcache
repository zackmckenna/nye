[{"/Users/zacharymckenna/Developer/Personal/nye/nye/src/index.js":"1","/Users/zacharymckenna/Developer/Personal/nye/nye/src/App.js":"2","/Users/zacharymckenna/Developer/Personal/nye/nye/src/data.js":"3"},{"size":547,"mtime":1609094280527,"results":"4","hashOfConfig":"5"},{"size":5982,"mtime":1609107725450,"results":"6","hashOfConfig":"5"},{"size":8639,"mtime":1609106659271,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1t2utn1",{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/zacharymckenna/Developer/Personal/nye/nye/src/index.js",[],"/Users/zacharymckenna/Developer/Personal/nye/nye/src/App.js",["15"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport data from \"./data\";\nimport { useEffect, useState } from \"react\";\nimport {\n  Accordion,\n  Jumbotron,\n  Container,\n  Col,\n  Row,\n  Card,\n  Button,\n} from \"react-bootstrap\";\n\nconst App = () => {\n  const [characters, setCharacters] = useState();\n\n  const style = {\n    pink: {\n      color: \"magenta\",\n    },\n    green: {\n      color: \"#5cb85c\",\n    },\n    red: {\n      color: \"#d9534f\",\n    },\n    blue: {\n      color: \"#5bc0de\",\n    },\n    orange: {\n      color: \"#f0ad4e\",\n    },\n  };\n\n  useEffect(() => {\n    setCharacters(data);\n  }, []);\n\n  return (\n    <>\n      <Jumbotron fluid>\n        <Container>\n          <h1>The Great Yule Ball</h1>\n          <p>The attendees of the great Yule Ball of 1202</p>\n        </Container>\n      </Jumbotron>\n      <Container>\n        {characters &&\n          characters.map((character) => {\n            return (\n              <Row className=\"mb-3\">\n                <Col>\n                  <Card>\n                    <Card.Body>\n                      <Card.Title style={{ fontFamily: \"Langar\" }}>\n                        {character.characterName\n                          ? character.characterName\n                          : \"name unknown\"}\n                      </Card.Title>\n                      <Card.Subtitle className=\"mb-2 text-muted\">\n                        {character.race ? character.race : \"\"}\n                      </Card.Subtitle>\n\n                      <Card.Text>\n                        <p>\n                          A {character.descriptor.toLowerCase()}{\" \"}\n                          {character.role.toLowerCase()} who has{\" \"}\n                          <span style={style.green}>\n                            {character.strength.toLowerCase()}\n                          </span>\n                          , but also{\" \"}\n                          <span style={style.red}>\n                            {character.flaw.toLowerCase()}\n                          </span>\n                          . Their drive is to {character.drive.toLowerCase()}.\n                        </p>\n                      </Card.Text>\n                      <Accordion>\n                        {character.nickname && (\n                          <Card>\n                            <Card.Header>\n                              <Accordion.Toggle\n                                as={Button}\n                                variant=\"link\"\n                                eventKey=\"0\"\n                              >\n                                Nickname\n                              </Accordion.Toggle>\n                            </Card.Header>\n                            <Accordion.Collapse eventKey=\"0\">\n                              <Card.Body>{character.nickname}</Card.Body>\n                            </Accordion.Collapse>\n                          </Card>\n                        )}\n                        {character.motivation && (\n                          <Card>\n                            <Card.Header>\n                              <Accordion.Toggle\n                                as={Button}\n                                variant=\"link\"\n                                eventKey=\"1\"\n                              >\n                                Motivation\n                              </Accordion.Toggle>\n                            </Card.Header>\n                            <Accordion.Collapse eventKey=\"1\">\n                              <Card.Body>{character.motivation}</Card.Body>\n                            </Accordion.Collapse>\n                          </Card>\n                        )}\n                        {character.memory && (\n                          <Card>\n                            <Card.Header>\n                              <Accordion.Toggle\n                                as={Button}\n                                variant=\"link\"\n                                eventKey=\"2\"\n                              >\n                                Memorable Location\n                              </Accordion.Toggle>\n                            </Card.Header>\n                            <Accordion.Collapse eventKey=\"2\">\n                              <Card.Body>{character.memory}</Card.Body>\n                            </Accordion.Collapse>\n                          </Card>\n                        )}\n                        {character.infamy && (\n                          <Card>\n                            <Card.Header>\n                              <Accordion.Toggle\n                                as={Button}\n                                variant=\"link\"\n                                eventKey=\"3\"\n                              >\n                                Realm Status\n                              </Accordion.Toggle>\n                            </Card.Header>\n                            <Accordion.Collapse eventKey=\"3\">\n                              <Card.Body>{character.infamy}</Card.Body>\n                            </Accordion.Collapse>\n                          </Card>\n                        )}\n                        {character.home && (\n                          <Card>\n                            <Card.Header>\n                              <Accordion.Toggle\n                                as={Button}\n                                variant=\"link\"\n                                eventKey=\"4\"\n                              >\n                                Home\n                              </Accordion.Toggle>\n                            </Card.Header>\n                            <Accordion.Collapse eventKey=\"4\">\n                              <Card.Body>{character.home}</Card.Body>\n                            </Accordion.Collapse>\n                          </Card>\n                        )}\n                      </Accordion>\n                    </Card.Body>\n                  </Card>\n                </Col>\n              </Row>\n            );\n          })}\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","/Users/zacharymckenna/Developer/Personal/nye/nye/src/data.js",[],{"ruleId":"16","severity":1,"message":"17","line":1,"column":8,"nodeType":"18","messageId":"19","endLine":1,"endColumn":12},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar"]